alias gpr="git pull --rebase"
alias gps="git push"
alias ts="tig status"
#alias aws="aws --profile=saml"
alias dc='docker-compose'

function docker_container_exists {
  cat << EOF | CONTAINER=$1 python3
import subprocess
import os
import sys
import json

p = subprocess.Popen(['docker', 'inspect', os.environ['CONTAINER']],
    stdout=subprocess.PIPE, stderr=subprocess.PIPE)
if p.wait() != 0:
  sys.exit(1)
body = p.stdout.read()
res = json.loads(body)
if len(res) == 0:
  sys.exit(1)
res = res[0]

if 'Name' in res:
  if res['Id'] != os.environ['CONTAINER'] and res['Name'] != "/%s" % os.environ['CONTAINER']:
    sys.exit(1)
else:
  if res['Id'] != os.environ['CONTAINER']:
    sys.exit(1)
EOF
}

function logtail {
  if test -z $*; then
    dc logs --tail=30 -f
  else
    docker_container_exists $1 && docker logs --tail=30 -f $1 || dc logs --tail=30 -f $1
  fi
}

function logs {
  if test -z $*; then
    dc logs --no-color
  else
    (docker_container_exists $1 && docker logs $1 || dc logs --no-color $1) 2>&1 | less
  fi
}

function docker-shell {
  container=$1
  shift

  if test -n "$*"; then
    if docker_container_exists $container; then
      docker exec -ti $container $*
    else
      dc exec $container $*
    fi
  else
    if docker_container_exists $container; then
      docker exec -ti $container /bin/bash -c "stty rows $(tput lines) cols $(tput cols) && export TERM=xterm-256color && exec /bin/bash"
    else
      dc exec $container /bin/bash -c "stty rows $(tput lines) cols $(tput cols) && export TERM=xterm-256color && exec /bin/bash"
    fi
  fi
}

alias dsh='docker-shell'

awslogin() {
  saml2aws --skip-prompt login || saml2aws login
}

function saw {
  awslogin
  env saw --profile=saml $*
}
