#! /bin/bash

set -ueo pipefail

have() {
  type $* >&/dev/null
}

# List all commits with git-cherry and exclude all the ones that are already
# part of the change log of the current branch.  For each available commit,
# invoke 'git show' to print the commit message.

export PAGER=""

if have tempfile; then
  make_tempfile() {
    tempfile -p $*
  }
else
  make_tempfile() {
    mktemp -t $*
  }
fi

if test $# = 2; then
  SOURCE=$1
  DESTINATION=$2
else
  SOURCE=$1
  DESTINATION=HEAD
fi

tempfile=$(make_tempfile $(basename $0))
GITVERSION_MAJOR=2
GITVERSION_MINOR=30
if ! git --version | grep -q "^git version $GITVERSION_MAJOR\.$GITVERSION_MINOR"; then
  echo "Expecting git version $GITVERSION_MAJOR.$GITVERSION_MINOR" >&2
  exit 1
fi

git log --pretty=format:%B $DESTINATION | sed -nEe 's/^(Merge|Block) commit ([a-z0-9]{7}):.*$/\2/p' > $tempfile

# Grep will not match anything if file is empty, so put a dummy SHA1 that will
# never match to make sure file is not empty
echo nonexistent >> $tempfile

git cherry $DESTINATION $SOURCE | sed -ne 's/^+ //p' | grep -v -f $tempfile || true

rm -f $tempfile
